#!/bin/bash

##### Takes the txt file with the SRA ids or a single SRA id as the argument.
##### A text file only containing the SRA ids can be obtained from the NCBI website

set -e ## Exit if problems arise
#set -x ## For debugging
## Edit this variable if there is a change to the NCBI url structure
url="https://trace.ncbi.nlm.nih.gov/Traces/sra/?run="

[[ -f $1 ]] && input_file=$1 ## Can't do it inside the from_file() function

clear && echo "SRA scraper "
echo "A non interactive tool to download the Taxonomic data from the NCBI SRA database"
## functions
from_file(){
  while read -r line
 do ## read line one to variable line
    #loading $line
    wget -q -O - $url$line | grep "\"name\":" > $line.json ## wget  results get grepped with the keyword
  ## -q tag quiet and clean terminal result -O - to send the output to STDOUT
  done < $input_file
echo "DONE"
}
loading(){
pid=$!
text=$1
while kill -0 $pid 2>/dev/null
do
  echo -ne "$text .\r"
  sleep 0.5
  echo -ne "$text ..\r"
  sleep 0.5
  echo -ne "$text ...\r"
  sleep 0.5
  echo -ne "\r\033[K"
  echo -ne "$text\r"
  sleep 0.5
done
## A function to display loading dots purely decorative
}
help(){
echo
echo "[USAGE] scrape [FILENAME] or [SRA id]"
echo "scrape -h or scrape --help - to print this help"
echo
echo "The script takes two types of arguments, A file containing the SRA ids for batch processing or a single SRA id"
echo "The file should contain only one SRA id per line."
echo "Such a file can be obtained from the NCBI website through Download > File > Accession number"
}

  if [[ -z $1 || $1 == '-h' || $1 == '--help' ]] ## -z true if the argument is empty
 then
    help
elif [[ -f $1 ]] ## -f true if the argument is a file
 then
    from_file
elif [[ -d $1 ]]
 then
    echo "Argument leads to a directory, Enter a filename..."
else
    echo "Proceeding in belief that the argument is an SRA id..."
    wget -q -O - $url$1 | grep "\"name\":" > $1.json ## adding the file extension gives a better looking result
    echo "DONE"
#wget -i $1
fi

